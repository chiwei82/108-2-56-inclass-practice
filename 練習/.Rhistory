askSilly_weather("臺中市")
askSilly_weather("花蓮縣")
what_time_it_is =
function(someWhere){
someWhere = as.character(someWhere)
current_time_translated_in_someWhere =
lubridate::ymd_hms(now(),tz=someWhere)
return(current_time_translated_in_someWhere)
}
what_time_it_is("Europe/Paris")
what_time_it_is =
function(someWhere){
library(lubridate)
someWhere = as.character(someWhere)
current_time_translated_in_someWhere =
ymd_hms(now(),tz=someWhere)
return(current_time_translated_in_someWhere)
}
what_time_it_is("Europe/Paris")
what_time_it_is =
function(someWhere){
library(lubridate)
someWhere = as.character(someWhere)
current_time_translated_in_someWhere =
with_tz(now(),tzone = someWhere)
return(current_time_translated_in_someWhere)
}
what_time_it_is("Europe/Paris")
what_time_it_is =
function(someWhere){
library(lubridate)
someWhere = as.character(someWhere)
current_time_translated_in_someWhere =
with_tz(now(),tzone = someWhere)
return(current_time_translated_in_someWhere)
}
what_time_it_is(Europe/Paris)
what_time_it_is("Europe/Paris)
what_time_it_is("Europe/Paris")
what_time_it_is("Europe/Paris")
grades <- c(52, 77, 59, 88, 90)
ifelse(grades >= 60, "及格", "不及格")
grades <- c(52, 77, 59, 88, 90)
ifelse(grades >= 60, "及格", "不及格")
n<- 540
conditionExpression_outcome=
ifelse(n %% 2==0, "even", "odd")
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"=fvalue <- -(n+1)/2, # 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
print(fvalue)
n<- 540
conditionExpression_outcome=
ifelse(n %% 2==0, "even", "odd")
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"=fvalue <- -(n+1)/2, # 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
print(fvalue)
n<- 540
conditionExpression_outcome=
ifelse(n %% 2==0, "even", "odd")
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"=fvalue <- (n+1)/2, # 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
print(fvalue)
n<- 541
conditionExpression_outcome=
ifelse(n %% 2==0, "even", "odd")
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"=fvalue <- (n+1)/2, # 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
print(fvalue)
result <-
{
x <- 2
y <- 3
x**y+15
}
print(result)
result <-
{
x <- 2
y <- 3
x**y+15
}
print(result)
result2 <-
{
x <- 2
y <- 3
if(x< 3){
warning("x值太小")
} else {
x**y+15
}
}
print(result2)
myFun <- function(x,y){
return(x**y+15)
}
# 等同於
myFun2 <- function(x,y){
x**y+15
}
myFun(5,3) -> outcome
myFun2(5,3) -> outcome2
print(outcome)
print(outcome2)
a <- c(1,2,3)
cut(a, c(1,2,3))
cut(x, c(a,b,c))
cut(a, c(1,2,3))
typeof(a)
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
library(purrr)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
grade <- sample(1:100, 10, replace=T)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[1]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[1]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[1]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
letterGrade
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
library(lubridate)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
## 使用switch決定要做什麼事
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
library(lubridate)
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
library(lubridate)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
## 使用switch決定要做什麼事
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
library(lubridate)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
## 使用switch決定要做什麼事
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
nowtime
typeof(nowtime)
library(lubridate)
library(glue)
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
## 使用switch決定要做什麼事
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
glue("{today()} 18:00:00")
class(glue("{today()} 18:00:00"))
typeof(glue("{today()} 18:00:00"))
class(glue("{today()} 18:00:00"))
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cut(nowtime, cutpoints) %>% levels()
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
cut(nowtime, cutpoints) %>% levels()
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
nowtime <- glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
cut(nowtime, cutpoints) %>% levels()
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
nowtime
whatNeedToDo_butler_mom <- function(nowtime=now()){
library(lubridate)
library(glue)
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
}
ymd_hms(glue::glue("{today()} 08:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 14:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 18:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()+days(1)} 00:20:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
myAnswer <- c(2,3,6)
correctAnswer <- c(2,3,5)
if(myAnswer == correctAnswer){ # 只取用第一個T/F
print("你答對了")
}
myAnswer == correctAnswer
myAnswer == correctAnswer
if(myAnswer == correctAnswer){ # 只取用第一個T/F
print("你答對了")
}
R3.5以上版本可以設定
Copy
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "true")
禁止length>1的logical condition.
myAnswer <- c(2,3,6)
correctAnswer <- c(2,3,5)
if(myAnswer == correctAnswer){ # 只取用第一個T/F
print("你答對了")
}
R3.5以上版本可以設定
Copy
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "true")
禁止length>1的logical condition.
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "true")
Copy
myAnswer <- c(2,3,6)
correctAnswer <- c(2,3,5)
if(all(myAnswer == correctAnswer)){ # 要全TRUE
print("你答對了")
}
if(any(myAnswer == correctAnswer)){ # 只要有一個TRUE
print("裡頭有數字是對的")
}
myAnswer <- c(1,2,3)
correctAnswer <- factor(c(1,2,3))
if(is.factor(myAnswer) && all(myAnswer==correctAnswer)){
print("答對了")
10
} else {
print("答錯了")
0
}-> myGrade
myGrade
myAge <- 40
myChildrenNumber <- 5
if(myAge >=65 | myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
if(myAge >=65 ||  myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
myAge <- 67
myChildrenNumber <- 5
myAge <- 40
myChildrenNumber <- 5
if(myAge >=65 | myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
if(myAge >=65 ||  myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
x <- c(2,5,10,-21,3,8)
ifelse(x %% 2==0, "even", "odd")
