averageHeightByGroup
pick6
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
`levels_of_學年度` = sort(as.integer(levels(factor(studentHeights[["學年度"]],ordered = T))) , decreasing = F )
`levels_of_年齡` = sort(as.integer(levels(factor(studentHeights[["年齡"]],ordered = T))) , decreasing = F )
`levels_of_學年度`
`levels_of_年齡`
levels(factor(studentHeights[["學年度"]],levels = `levels_of_學年度`))
levels(factor(studentHeights[["年齡"]],levels = `levels_of_年齡`))
studentHeights[["學年度"]] = factor( studentHeights[["學年度"]], levels = `levels_of_學年度`)
studentHeights[["年齡"]] = factor( studentHeights[["年齡"]], levels = `levels_of_年齡`)
studentHeights
`年齡層類別` = c("6-8", "9-12", "13-15")
studentHeights[["年齡層"]] = factor(studentHeights[["年齡層"]], `年齡層類別`  )
levels(studentHeights[["年齡層"]])
studentHeights$`年齡層`
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6
pick9
pick9 = (studentHeights[["年齡層"]] == "9-12") & pick_total
pick9
pick13
pick13 = (studentHeights[["年齡層"]] == "13-15") & pick_total
pick13
meanof6 = mean(as.numeric(studentHeights[["平均身高"]][pick6 == T]))
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6 = (studentHeights[["年齡層"]] == "6-8") & pick_total
pick6
pick9 = (studentHeights[["年齡層"]] == "9-12") & pick_total
pick9
pick13 = (studentHeights[["年齡層"]] == "13-15") & pick_total
pick13
meanof6 = mean(as.numeric(studentHeights[["平均身高"]][pick6 == T]))
meanof9 = mean(as.numeric(studentHeights[["平均身高"]][pick9 == T]))
meanof13  = mean(as.numeric(studentHeights[["平均身高"]][pick13 == T]))
meanofall = c(meanof6,meanof9,meanof13)
names(meanofall) = c("6-8","9-12","13-15")
averageHeightByGroup = meanofall
averageHeightByGroup
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6 = (studentHeights[["年齡層"]] == "6-8") & pick_total
pick6
pick9 = (studentHeights[["年齡層"]] == "9-12") & pick_total
pick9
pick13 = (studentHeights[["年齡層"]] == "13-15") & pick_total
pick13
meanof6 = mean(as.numeric(studentHeights[["平均身高"]][pick6 == T]))
meanof9 = mean(as.numeric(studentHeights[["平均身高"]][pick9 == T]))
meanof13  = mean(as.numeric(studentHeights[["平均身高"]][pick13 == T]))
meanofall = c(meanof6,meanof9,meanof13)
names(meanofall) = c("6-8","9-12","13-15")
averageHeightByGroup = meanofall
averageHeightByGroup
pick13
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6 = (studentHeights[["年齡層"]] == "6-8") & pick_total
pick6
pick9 = (studentHeights[["年齡層"]] == "9-12") & pick_total
pick9
pick13 = (studentHeights[["年齡層"]] == "13-15") & pick_total
pick13
meanof6 = mean(as.numeric(studentHeights[["平均身高"]][pick6 == T]))
meanof9 = mean(as.numeric(studentHeights[["平均身高"]][pick9 == T]))
meanof13  = mean(as.numeric(studentHeights[["平均身高"]][pick13 == T]))
meanofall = c(meanof6,meanof9,meanof13)
names(meanofall) = c("6-8","9-12","13-15")
averageHeightByGroup = meanofall
averageHeightByGroup
pick_male = studentHeights[["類別"]] == "男"
pick_female = studentHeights[["類別"]] == "女"
pick_6_male = (studentHeights[["年齡層"]]=="6-8") & pick_male
pick_6_female =  (studentHeights[["年齡層"]]=="6-8") & pick_female
pick_9_male = (studentHeights[["年齡層"]]=="9-12") & pick_male
pick_9_female =  (studentHeights[["年齡層"]]=="9-12") & pick_female
pick_13_male = (studentHeights[["年齡層"]]=="13-15") & pick_male
pick_13_female =  (studentHeights[["年齡層"]]=="13-15") & pick_female
mean6_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_6_male == T]))
mean6_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_6_female == T]))
mean9_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_9_male == T]))
mean9_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_9_female == T]))
mean13_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_13_male == T]))
mean13_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_13_female == T]))
diffmean6 = mean6_m - mean6_f
diffmean9 = mean9_m - mean9_f
diffmean13 = mean13_m - mean13_f
diffmean = c(diffmean6, diffmean9, diffmean13)
names(diffmean) =  c("6-8","9-12","13-15")
heightDifferenceByGroup = diffmean
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
table(differentMajors)
realEstateRegex = "不動(?.產與城鄉環境學)系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "不+動+產+與+城+鄉+環+境+學系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)(學?)系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)學系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)學系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+學系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+學系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+(學系)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+(學系)(?!系)"
# realEstateRegex
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+(學系)(?!系)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+系"
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+(學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
a= str_replace(currentLevels,bSchoolRegex,"商學院")
a = str_replace(differentMajors,realEstateRegex,"不動系")
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?))+(學系)"
# realEstateRegex
a = str_replace(differentMajors,realEstateRegex,"不動系")
table(a)
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)(學?))+系)"
table(a)
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)(學?))+系)"
# realEstateRegex
a = str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "((不?)(動?)(產?)(與?)(城?)(鄉?)(環?)(境?)(學?))系)"
a = str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學)系"
a = str_replace(differentMajors,realEstateRegex,"不動系")
table(a)
str_replace(differentMajors,realEstateRegex,"不動系")
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學)?系"
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學?)系"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學?)(?!系)"
# realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學系)"
str_replace(differentMajors,realEstateRegex,"不動系")
table(str_replace(differentMajors,realEstateRegex,"不動系"))
table(differentMajors)
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
table(differentMajors)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學系)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學(?!系)"
# realEstateRegex
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
table(str_replace(differentMajors,realEstateRegex,"不動系"))
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學)(?!系)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?)學)(?!系)"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?))學"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?))"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)+系"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?))學系"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(?<=(不?動?產?與?城?鄉?環?境?))"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
table(str_extract(differentMajors,realEstateRegex))
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動產與城鄉環境學)?系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
realEstateRegex = "(不動產與城鄉環境)?系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動產與城鄉環境)?系"
# realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動產與城鄉環境)?"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)(學?)"
# realEstateRegex
differentMajors,realEstateRegex
str_extract(differentMajors,realEstateRegex)
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)(學?)系"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "(?<=((不?動?產?與?城?鄉?環?境?)(學?)))系"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
realEstateRegex = "((不?動?產?與?城?鄉?環?境?)(學?))"
# realEstateRegex
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)(學?)"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
table(str_extract(differentMajors,realEstateRegex))
realEstateRegex = "(不?動?產?與?城?鄉?環?境?)(學?)(系?)"
# realEstateRegex
str_extract(differentMajors,realEstateRegex)
str_replace(differentMajors,realEstateRegex,"不動系"))
str_replace(differentMajors,realEstateRegex,"不動系")
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
# realEstateRegex
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
str_replace(differentMajors,realEstateRegex,"不動系")
table(str_replace(differentMajors,realEstateRegex,"不動系"))
differentMajors = factor(differentMajors)
currentLevels = levels(differentMajors)
currentLevels
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
`levels_of_學年度` = sort(as.integer(levels(factor(studentHeights[["學年度"]],ordered = T))) , decreasing = F )
`levels_of_年齡` = sort(as.integer(levels(factor(studentHeights[["年齡"]],ordered = T))) , decreasing = F )
`levels_of_學年度`
`levels_of_年齡`
levels(factor(studentHeights[["學年度"]],levels = `levels_of_學年度`))
levels(factor(studentHeights[["年齡"]],levels = `levels_of_年齡`))
studentHeights[["學年度"]] = factor( studentHeights[["學年度"]], levels = `levels_of_學年度`)
studentHeights[["年齡"]] = factor( studentHeights[["年齡"]], levels = `levels_of_年齡`)
studentHeights
`年齡層類別` = c("6-8", "9-12", "13-15")
studentHeights[["年齡層"]] = factor(studentHeights[["年齡層"]], `年齡層類別`  )
levels(studentHeights[["年齡層"]])
studentHeights$`年齡層`
pick_total = (studentHeights[["類別"]] == "總計")
pick_total
pick6 = (studentHeights[["年齡層"]] == "6-8") & pick_total
pick6
pick9 = (studentHeights[["年齡層"]] == "9-12") & pick_total
pick9
pick13 = (studentHeights[["年齡層"]] == "13-15") & pick_total
pick13
meanof6 = mean(as.numeric(studentHeights[["平均身高"]][pick6 == T]))
meanof9 = mean(as.numeric(studentHeights[["平均身高"]][pick9 == T]))
meanof13  = mean(as.numeric(studentHeights[["平均身高"]][pick13 == T]))
meanofall = c(meanof6,meanof9,meanof13)
names(meanofall) = c("6-8","9-12","13-15")
averageHeightByGroup = meanofall
averageHeightByGroup
pick_male = studentHeights[["類別"]] == "男"
pick_female = studentHeights[["類別"]] == "女"
pick_6_male = (studentHeights[["年齡層"]]=="6-8") & pick_male
pick_6_female =  (studentHeights[["年齡層"]]=="6-8") & pick_female
pick_9_male = (studentHeights[["年齡層"]]=="9-12") & pick_male
pick_9_female =  (studentHeights[["年齡層"]]=="9-12") & pick_female
pick_13_male = (studentHeights[["年齡層"]]=="13-15") & pick_male
pick_13_female =  (studentHeights[["年齡層"]]=="13-15") & pick_female
mean6_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_6_male == T]))
mean6_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_6_female == T]))
mean9_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_9_male == T]))
mean9_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_9_female == T]))
mean13_m =  mean(as.numeric(studentHeights[["平均身高"]][pick_13_male == T]))
mean13_f =  mean(as.numeric(studentHeights[["平均身高"]][pick_13_female == T]))
diffmean6 = mean6_m - mean6_f
diffmean9 = mean9_m - mean9_f
diffmean13 = mean13_m - mean13_f
diffmean = c(diffmean6, diffmean9, diffmean13)
names(diffmean) =  c("6-8","9-12","13-15")
heightDifferenceByGroup = diffmean
heightDifferenceByGroup
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors = factor(differentMajors)
currentLevels = levels(differentMajors)
currentLevels
table(differentMajors)
str_replace(differentMajors,realEstateRegex,"不動系")
table(str_replace(differentMajors,realEstateRegex,"不動系"))
bSchoolRegex = "(休閒與運動管理學系|金融系|金融與合作經營學系|金融與合作學系)"
# bSchoolRegex
table(str_replace(currentLevels,bSchoolRegex,"商學院"))
bSchoolRegex = "(休運系|休閒與運動管理學系|金融系|金融與合作經營學系|金融與合作學系)"
# bSchoolRegex
table(str_replace(currentLevels,bSchoolRegex,"商學院"))
bSchoolRegex = "(休運系|休閒與運動管理學系|金融系|金融與合作學系|金融與合作經營學系)"
# bSchoolRegex
table(str_replace(currentLevels,bSchoolRegex,"商學院"))
str_replace(currentLevels,bSchoolRegex,"商學院")
table(str_replace(currentLevels,bSchoolRegex,"商學院"))
table(differentMajors)
levels(differentMajors)
levels(differentMajors) = str_replace(currentLevels,bSchoolRegex,"商學院")
levels(differentMajors)
table(differentMajors)
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
levels(differentMajors) = str_replace(currentLevels,bSchoolRegex,"商學院")
levels(differentMajors) = str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
# differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
differentMajors = factor(differentMajors)
currentLevels = levels(differentMajors)
currentLevels
bSchoolRegex = "(休運系|休閒與運動管理學系|金融系|金融與合作學系|金融與合作經營學系)"
bSchoolRegex
levels(differentMajors) = str_replace(currentLevels,bSchoolRegex,"商學院")
table(differentMajors)
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
levels(differentMajors) = str_replace(currentLevels,bSchoolRegex,"商學院")
table(differentMajors)
# differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
table(differentMajors)
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
# differentMajors
differentMajors =  str_replace(differentMajors,"休閒與運動管理學系","休運系")
differentMajors =  str_replace(differentMajors,"(金融與合作學系|金融與合作經營學系)","金融系")
differentMajors =  str_replace(differentMajors,"經濟學系","經濟系")
differentMajors =  str_replace(differentMajors,"社會工作學系","社工系")
differentMajors =  str_replace(differentMajors,"社會學系","社會系")
differentMajors =  str_replace(differentMajors,"(公共行政系|公共行政暨政策學系)","公行系")
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
# differentMajors
differentMajors =  str_replace(differentMajors,"休閒與運動管理學系","休運系")
differentMajors =  str_replace(differentMajors,"(金融與合作學系|金融與合作經營學系)","金融系")
differentMajors =  str_replace(differentMajors,"經濟學系","經濟系")
differentMajors =  str_replace(differentMajors,"社會工作學系","社工系")
differentMajors =  str_replace(differentMajors,"社會學系","社會系")
differentMajors =  str_replace(differentMajors,"(公共行政|公共行政暨政策學)系(?!學)","公行系")
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
# differentMajors
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
str_replace(differentMajors,realEstateRegex,"不動系")
differentMajors = factor(differentMajors)
currentLevels = levels(differentMajors)
currentLevels
bSchoolRegex = "(休運系|休閒與運動管理學系|金融系|金融與合作學系|金融與合作經營學系)"
bSchoolRegex
str_replace(currentLevels,bSchoolRegex,"商學院")
differentMajors =  str_replace(differentMajors,"休閒與運動管理學系","休運系")
differentMajors =  str_replace(differentMajors,"(金融與合作學系|金融與合作經營學系)","金融系")
differentMajors =  str_replace(differentMajors,"經濟學系","經濟系")
differentMajors =  str_replace(differentMajors,"社會工作學系","社工系")
differentMajors =  str_replace(differentMajors,"社會學系","社會系")
differentMajors =  str_replace(differentMajors,"(公共行政|公共行政暨政策學)系(?!學)","公行系")
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
# differentMajors
differentMajors =  str_replace(differentMajors,"休閒與運動管理學系","休運系")
differentMajors =  str_replace(differentMajors,"(金融與合作學系|金融與合作經營學系)","金融系")
differentMajors =  str_replace(differentMajors,"經濟學系","經濟系")
differentMajors =  str_replace(differentMajors,"社會工作學系","社工系")
differentMajors =  str_replace(differentMajors,"社會學系","社會系")
differentMajors =  str_replace(differentMajors,"(公共行政|公共行政暨政策學)系(?!學)","公行系")
differentMajors =  str_replace(differentMajors,realEstateRegex,"不動系")
table(differentMajors)
differentMajors
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
realEstateRegex = "(不動)(產?與?城?鄉?環?境?)(學?)(系?)"
realEstateRegex
table(str_replace(differentMajors,realEstateRegex,"不動系"))
school = c("休運系","金融系","經濟系","社會系","社工系","公行系","不動系")
school = factor(school)
levels(school)
school = c("休運系","金融系","經濟系","社會系","社工系","公行系","不動系")
school = factor(school)
business_regex = "(休運系|金融系)"
social_regex = "(經濟系|社會系|社工系)"
public_regex = "(公行系|不動系)"
levels(school) = str_replace(levels(school), business_regex , "商學院")
levels(school) = str_replace(levels(school), social_regex , "社科院")
levels(school) = str_replace(levels(school), public_regex , "公共事務學院")
levels(school)
# school
school
levels(school)
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
garbageRoutes
class(garbageRoutes)
str(garbageRoutes)
str_extract (garbageRoutes$linename, "[:upper:][:digit:]+路線")
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
table(str_extract (garbageRoutes$linename, "[:upper:][:digit:]+路線"))
class(garbageRoutes)
str(garbageRoutes)
garbageRoutes[["route"]] = str_extract (garbageRoutes$linename, "[:upper:][:digit:]+路線")
str(garbageRoutes)
garbageRoutes[["route"]]
table(str_extract (garbageRoutes$linename, "[:upper:][:digit:]+路線"))
table(garbageRoutes[["route"]] = str_extract (garbageRoutes$linename, "[:upper:]+[:digit:]+路線"))
table(str_extract (garbageRoutes$linename, "[:upper:]+[:digit:]+路線"))
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
class(garbageRoutes)
str(garbageRoutes)
garbageRoutes[["route"]] = str_extract (garbageRoutes$linename, "[:alnum:]+路線")
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->garbageRoutes
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->garbageRoutes
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
jsonlite::fromJSON("https://data.ntpc.gov.tw/od/data/api/EDC3AD26-8AE7-4916-A00B-BC6048D19BF8?$format=json") ->
garbageRoutes
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
print(numerals_Gujarati)
source("https://www.dropbox.com/s/tv16xt8mv11cli7/gujarati.R?dl=1")
print(receipts300[1:30]) # 印前30張
factor(receipts300)
# 此題其實不用設levels，Gujarati語的字碼排序剛好和它的1-9相同（只要同學有將receipts300轉成factor細心點就會注意到, 所以也可以：
factor_receipts300 <- factor(receipts300)
factor_receipts300
# 此題其實不用設levels，Gujarati語的字碼排序剛好和它的1-9相同（只要同學有將receipts300轉成factor細心點就會注意到, 所以也可以：
factor_receipts300 <- factor(receipts300,ordered = T)
factor_receipts300
levels(factor_receipts300)
numerals_Gujarati
# 此題其實不用設levels，Gujarati語的字碼排序剛好和它的1-9相同（只要同學有將receipts300轉成factor細心點就會注意到, 所以也可以：
factor_receipts300 <- factor(receipts300,levels = numerals_Gujarati)
levels(factor_receipts300)
# 此題其實不用設levels，Gujarati語的字碼排序剛好和它的1-9相同（只要同學有將receipts300轉成factor細心點就會注意到, 所以也可以：
factor_receipts300 <- factor(receipts300,levels = numerals_Gujarati,ordered = T)
levels(factor_receipts300)
as.integer(levels(factor_receipts300))
as.integer(factor_receipts300)
as.integer(numerals_Gujarati)
class(numerals_Gujarati)
as.integer(factor_receipts300)
sum300
sum300 <- sum(as.integer(factor_receipts300))
sum300
